@# assume EmPy context contains an array called io_keys with all the necessary metadata
#pragma once
#include <kvasir/io/io.hpp>
#include <kvasir/bit/bit.hpp>
namespace kvasir {
      namespace io {
@[if has_group(io)]@
@[for key in io]@
@{key_name = key.name}
@[if key_name != 'default']
@[for port in expand_ports(io)]@
          template<int Pin>
          struct MakeAction<Action::@(key_name.capitalize()), bit::PinLocation<@(port_number(port)), Pin>> :
              bit::Action<
                  bit::FieldLocation<
                      bit::Address<@(io_address(io, key, device, port)), @(reserved(io, key, device, port))>, (1 << Pin)>,
                  bit::@(action(key))> {};
@[end for]@
@[end if]@
@[end for]@
@[end if]@
      }  // namespace Io
}  // namespace Kvasir
